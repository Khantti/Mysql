=> Numeric Data Types

Data Type                                   Description

BIT(size)                                   A bit-value type, from 1 to 64, default value is 1
BOOL                                        Zero is considered as false, Values or Non-Zero values are considered as true                                  
BOOLEAN                                     Zero is considered as false, Values or Non-Zero values are considered as true

TINYINT(size)                               A very small integer -128 to 127, signed range -128 to 127, unsigned 0 to 255      
SMALLINT(size)                              A small integer -32768 to 32767, signed range -32768 to 32767, unsigned 0 to 65535   
MEDIUMINT(size)                             A medium integer -8388608 to 8388607, signed range -8388608 to 8388607, unsigned 0 to 16777215
INT                                         Signed range -2147483648 to 2147483647, unsigned 0 to 4294967295
INTEGER                                     Signed range -2147483648 to 2147483647, unsigned 0 to 4294967295
BITINT                                      A large integer

DECIMAL(size,d)                             fixed-point number. default value for d is 0
eg(999.99) = DECIMAL(5,2)                              
DEC(size,d)                                 fixed-point number. default value for d is 0
FLOAT(size,p)                               A floating point number (approximate value)
FLOAT(p)                                    A floating point number (approximate value). p is optional. p is from 0 to 24
DOUBLE(size,d)                              A floating point number (approximate value). p is optional. p is from 25 to 53         


Note:: DECIMAL for finance (such as money )
       FLOAT & DOUBLE for science app

--------------------------------------------------------------------

=> EXERCISE

CREATE TABLE IF NOT EXISTS items(
    name VARCHAR(20),
    price INT,
    status BOOL
);

DESC items;

INSERT INTO items(name,price)
VALUES('water',100),
('coffee',500),
('cake',800),
('snack',250.56),
('jam',1000);

SELECT * FROM items;

INSERT INTO items(name,price,status)
VALUES('water',100,0),
('coffee',500,1),
('cake',800,0),
('snack',250.56,1),
('jam',1000,0);

SELECT * FROM items;



CREATE TABLE IF NOT EXISTS proitems(
    name VARCHAR(20),
    purchaseprice INT(4) SIGNED,
    sellprice INT(4) UNSIGNED,
    status BOOL
);

DESC proitems;

INSERT INTO proitems(name,purchaseprice,sellprice,status)
VALUES('water',9000,9500,0),
('coffee',-100,200,1),
('cake',800,100,0),
('snack',-250.56,350.77,1),
('jam',-1000,2000,0);

SELECT * FROM proitems;

*error(unsigned)
INSERT INTO proitems(name,purchaseprice,sellprice,status)
VALUES('water',1000,-1100,0),
('coffee',-100,-200,1);

----------------------------------------------------------------

                            number data type
                            int         fixed point         floating point
                            integer     DECIMAL             FLOAT/DOUBLE

DECIMAL(5,2)
EG(999.99) is 5 digits and 2 decimal digits

DECIMAL(5,3) = 20.234
20.5 = 20.500
20.52354987 = 20.524 (warning)

CREATE TABLE IF NOT EXISTS sellitems(
    name VARCHAR(20),
    price DECIMAL(6,2)
);

DESC sellitems;


INSERT INTO sellitems(name,price)
VALUE ('water',500);

SELECT * FROM sellitems;


INSERT INTO sellitems(name,price)
VALUE ('coffee',100.43);

SELECT * FROM sellitems;


INSERT INTO sellitems(name,price)
VALUE ('redbull',1000.01);

SELECT * FROM sellitems;


INSERT INTO sellitems(name,price)
VALUE ('sponsor',1000.99);

SELECT * FROM sellitems;


INSERT INTO sellitems(name,price)
VALUE ('sponsor',1000.9948);

SELECT * FROM sellitems;


INSERT INTO sellitems(name,price)
VALUE ('sponsor',1000.3456);

SELECT * FROM sellitems;


INSERT INTO sellitems(name,price)
VALUE ('sponsor',550.9999);

SELECT * FROM sellitems;


INSERT INTO sellitems(name,price)
VALUE ('sponsor',1000);

SELECT * FROM sellitems;

*error
INSERT INTO sellitems(name,price)
VALUE ('caraborg',100000);

SELECT * FROM sellitems;

-----------------------------------------------------

=> FLOAT() Vs DOUBLE()

CREATE TABLE IF NOT EXISTS shoppings(
    name VARCHAR(20),
    purchaseprice FLOAT,
    sellprice FLOAT(4)
);

DESC shoppings;

INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('water',100,100),
('coffee',500,500.34),
('cake',800,800.56),
('snack',250,250.889),
('jam',9000,10000);

SELECT * FROM shoppings;

112233
INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('birdnest',112233.45,112233.45);

SELECT * FROM shoppings;

11223300
INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('birdnest',11223344.45,11223344.45);

SELECT * FROM shoppings;

11223300000
INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('birdnest',1122334455.45,1122334455.45);

SELECT * FROM shoppings;

---------------------------------------------------------

CREATE TABLE IF NOT EXISTS buyings(
    name VARCHAR(20),
    purchaseprice FLOAT,
    sellprice DOUBLE
);

DESC buyings;

INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('water',100,100),
('coffee',500,500.34),
('cake',800,800.56),
('snack',250,250.889),
('jam',9000,10000);

SELECT * FROM buyings;

112233  112233.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('birdnest',112233.45,112233.45);

SELECT * FROM buyings;


11223300 11223344.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('birdnest',11223344.45,11223344.45);

SELECT * FROM buyings;


1122330000 1122334455.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('birdnest',1122334455.45,1122334455.45);

SELECT * FROM buyings;


112233e15 1122334455667788.5
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('birdnest',1122334455667788.45,1122334455667788.45);

SELECT * FROM buyings;

---------------------------------------------------------------

=> e/E
HTML input number type allow 'e/E' because 'e' stands for exponential (exponent) which is a numeric symbol
Eg . 200000 can be written as 2e5 (3e4 = 3x10^4 = 30000)

^ call Caret or Hat

